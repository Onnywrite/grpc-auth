name: sso
services:
  postgres:
    container_name: postgres
    env_file: configs/ignore-postgres.env
    networks:
      - local_network
    volumes:
      - pg:/var/lib/postgresql/data
    image: postgres:16.2-alpine3.19
    user: postgres
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-d",
          "$POSTGRES_DB",
          "-U",
          "$POSTGRES_USER"
        ]
      interval: 2s
      timeout: 2s
      retries: 8
  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    env_file: configs/ignore-postgres.env
    container_name: migrate
    networks:
      - local_network
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB?sslmode=disable",
        "up"
      ]
    image: migrate/migrate:v4.17.1
  service:
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - 8080:8080
      - 5050:5050
    container_name: service
    networks:
      - local_network
      - global_network
    volumes:
      - ./configs:/etc/sso:ro
    build: .
networks:
  local_network:
  global_network:
    external: true
volumes:
  pg:
